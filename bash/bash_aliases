####### Git-stuff
# Undo last commit
alias undocommit='git reset --soft HEAD~1'
# Rebase and push
function pp() {
  git pull --rebase; git push
}
# Git add all, then show diff changes
function addiff() {
  git add .; git diff --staged
}
# Git stash and drop
function gitdrop() {
  git stash; git stash drop
}

####### tmux
alias ta='tmux attach || tmux'

####### apt-stuff
# What-Upgrade? Lists what should be upgraded on a remote machine
function wu() {
  ssh $1 'sudo DEBIAN_FRONTEND=noninteractive apt-get --dry-run dist-upgrade' | grep Inst | cut -f 2 -d' '
}
# Do-Upgrade! Installs upgrades on a remote machine
function dou() {
  ssh $1 'sudo DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade'
}

# Update&&Upgrade on local machine
function aptu() {
  sudo apt update && sudo apt dist-upgrade --autoremove
}
alias aptsh='apt-cache show $1'
alias aptsearch='apt-cache search $1'

####### gpg-stuff
# Temporarily decrypt something, and then shred it
function decrypt() {
  clear
  editor /tmp/decrypt
  gpg --decrypt /tmp/decrypt
  shred -z --remove /tmp/decrypt
}
# Sign a message
function sign() {
  editor /tmp/sign
  gpg --clearsign /tmp/sign
  cat /tmp/sign.asc
  shred -z --remove /tmp/sign
  shred -z --remove /tmp/sign.asc
}

# Kill running-gpg-agent
function killgpg() {
  kill $(ps aux | grep gpg-agent | grep -v grep | awk '{print $2}')
  export GPG_TTY=$(tty)
  gpg-connect-agent updatestartuptty /bye > /dev/null
  unset SSH_AGENT_PID
  export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
}

# Configure ssh-agent via GPG-agent/YubiKey
export GPG_TTY=$(tty)
gpg-connect-agent updatestartuptty /bye > /dev/null
unset SSH_AGENT_PID
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)

####### ssh-stuff
alias sshk='ssh-keygen -f ~/.ssh/known_hosts -R $1'
alias sshi='ssh -o StrictHostKeyChecking=no $1'

# Sudo-ssh, for when you need to do stuff remotely as root
function sudossh() {
  ssh -t $1 sudo -i
}

####### network-stuff
function vpnstop() {
  sudo systemctl stop wg-quick@wg0.service
}
function vpnrestart() {
  sudo systemctl restart wg-quick@wg0.service
}

# Connect to bluetooth
function btconnect() {
  bluetoothctl connect $1
}

# Does a remote reboot of given ssh-name
function rreboot() {
  ssh -t $1 'sudo /sbin/reboot'
}

# cd's to a private project of some sort
function priv() {
  cd ~/priv/$1*
}

# kubernetes-mgmt-stuff
function k8slist() {
  kubectl api-resources --verbs=list --namespaced -o name | xargs -n 1 kubectl get --show-kind --ignore-not-found -n $1
}

# Use for long-running tasks
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

alias rpwd='openssl rand -hex $1'
alias cls='clear'
alias q='exit'
alias ..='cd ..'
alias ...='cd ../..'
alias cd..='cd ..'

if [[ "`locale -a`" == *"nb_NO.utf8"* ]]; then
  export LC_CTYPE="nb_NO.utf8"
  export LC_NUMERIC="nb_NO.utf8"
  export LC_TIME="nb_NO.utf8"
  export LC_COLLATE="nb_NO.utf8"
  export LC_MONETARY="nb_NO.utf8"
  # This is for help-messages and such, we want those in native language.
  #export LC_MESSAGES="nb_NO.utf8"
  export LC_PAPER="nb_NO.utf8"
  export LC_NAME="nb_NO.utf8"
  export LC_ADDRESS="nb_NO.utf8"
  export LC_TELEPHONE="nb_NO.utf8"
  export LC_MEASUREMENT="nb_NO.utf8"
  export LC_IDENTIFICATION="nb_NO.utf8"
fi
